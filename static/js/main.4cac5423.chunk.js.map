{"version":3,"sources":["components/question-container/QuestionContainer.jsx","components/animation/Animation.jsx","animations/HelloAnimation.jsx","components/background/Background.jsx","components/ticker/Ticker.js","components/footer/Footer.jsx","pages/pagesPathsDict.js","pages/welcome-page/WelcomePage.jsx","animations/SenyaAnimation.jsx","animations/QrAnimation.jsx","pages/beer-and-snacks/BeerAndSnacks.jsx","animations/PingPongAnimation.jsx","pages/ping-pong/PingPong.jsx","pages/moon/Moon.jsx","pages/rocket/Rocket.jsx","pages/frog/Frog.jsx","pages/final-page/FinalPage.jsx","App.js","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["QuestionHead","props","children","Grid","item","xs","Container","QuestionTitle","QuestionBody","useActionStyles","makeStyles","root","textAlign","margin","marginBottom","QuestionActions","classes","className","QuestionContainer","container","Animation","animationData","options","HelloAnimation","animation","useStyles","background","height","minHeight","padding","color","width","display","justifyContent","horizontalAlign","alignItems","verticalAlign","Background","defaultProps","withBottomMargin","wrapper","minWidth","textColor","borderTop","borderColor","borderBottom","text","fontWeight","Ticker","Typography","variant","propTypes","PropTypes","string","Footer","createRoutePath","path","btoa","pagesPathsDict","start","question1","question2","question3","question4","question5","end","questionHead","textShadow","questionText","buttonRoot","withRouter","history","Button","size","onClick","push","SenyaAnimation","QrAnimation","BeerAndSnacks","style","PingPongAnimation","PingPong","Moon","Rocket","Frog","FinalPage","dancingDog","overflowX","App","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4cac5423.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport Container from '@material-ui/core/Container'\nimport { makeStyles } from '@material-ui/core/styles'\n\nexport const QuestionHead = (props) => {\n\n    const { children } = props\n\n    return (\n        <Grid item xs={12}>\n            <Container>\n                {children}\n            </Container>\n        </Grid>\n    )\n}\n\n\nexport const QuestionTitle = (props) => {\n\n    const { children } = props\n\n    return (\n        <Grid item xs={12}>\n            {children}\n        </Grid>\n    )\n}\n\nexport const QuestionBody = (props) => {\n\n    const { children } = props\n\n    return (\n        <Grid item xs={12}>\n            {children}\n        </Grid>\n    )\n}\n\nconst useActionStyles = makeStyles({\n    root: {\n        textAlign: 'center',\n        margin: '10px 0',\n        marginBottom: '50px'\n    }\n})\n\nexport const QuestionActions = (props) => {\n\n    const { children } = props\n    const classes = useActionStyles()\n\n    return (\n        <Container className={classes.root} >\n            <Grid item xs={12}>\n                {children}\n            </Grid>\n        </Container>\n    )\n}\n\nfunction QuestionContainer(props) {\n\n    const { children } = props\n\n    return (\n        <Container>\n            <Grid container>\n                {children}\n            </Grid>\n        </Container>\n    )\n}\n\nQuestionContainer.propTypes = {\n    children: PropTypes.node\n}\n\nexport default QuestionContainer\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Lottie from 'lottie-react-web'\n\nfunction Animation(props) {\n\n    const { animationData } = props\n\n    return (\n        <Lottie\n            options={{\n                animationData\n            }}\n        />\n    )\n}\n\nAnimation.propTypes = {\n    animationData: PropTypes.object.isRequired\n}\n\nexport default Animation\n","import React from 'react'\n\nimport Animation from '../components/animation/Animation'\n\nimport animation from './json/hello.json'\n\nexport default function HelloAnimation() {\n    return (\n        <Animation animationData={animation} />\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    background: {\n        height: '100%',\n        minHeight: '100vh',\n        padding: '15px 0',\n        background: props => props.color,\n    },\n    container: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: props => props.horizontalAlign,\n        alignItems: props => props.verticalAlign\n    }\n})\n\nexport function Background(props) {\n\n    const { children } = props\n    const classes = useStyles(props)\n\n    return (\n        <div className={classes.background}>\n            <div className={classes.container}>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nBackground.propTypes = {\n    children: PropTypes.node,\n    color: PropTypes.string,\n    withBottomMargin: PropTypes.bool,\n    horizontalAlign: PropTypes.oneOf(['center', 'start', 'end', 'space-around', 'space-between']),\n    verticalAlign: PropTypes.oneOf(['center', 'start', 'end'])\n}\n\nBackground.defaultProps = {\n    children: '',\n    color: '',\n    withBottomMargin: false,\n    horizontalAlign: 'center',\n    verticalAlign: 'center'\n}\n\nexport default Background\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Typography, makeStyles } from '@material-ui/core'\n\nimport './Ticker.css'\n\nconst useStyles = makeStyles({\n    wrapper: {\n        minWidth: '100vw',\n        height: '100%',\n        color: props => props.textColor,\n        background: props => props.background,\n        borderTop: ({ borderColor, textColor }) => `2px solid ${borderColor ? borderColor : textColor}`,\n        borderBottom: ({ borderColor, textColor }) => `2px solid ${borderColor ? borderColor : textColor}`,\n    },\n    text: {\n        fontWeight: 'bold'\n    }\n})\n\nexport default function Ticker(props) {\n\n    const { text } = props\n    const classes = useStyles(props)\n\n    return (\n        <div className={classes.wrapper}>\n            <div className={'ticker-container'}>\n                <Typography className={classes.text} variant=\"caption\">\n                    {text}\n                </Typography>\n            </div>\n        </div>\n    )\n}\n\nTicker.propTypes = {\n    text: PropTypes.string,\n    textColor: PropTypes.string,\n    borderColor: PropTypes.string,\n    background: PropTypes.string\n}\n\nTicker.defaultProps = {\n    textColor: 'black',\n    background: 'white'\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nimport Ticker from '../ticker/Ticker'\n\nfunction Footer(props) {\n\n    const text = 'Приложение разработано по заказу Ани. Номер поддержки: +7 (915) 194-94-19. Москва. 2020.'\n\n    return (\n        <Ticker text={text} {...props} />\n    )\n}\n\nTicker.propTypes = {\n    textColor: PropTypes.string,\n    borderColor: PropTypes.string,\n    background: PropTypes.string\n}\n\nTicker.defaultProps = {\n    textColor: 'black',\n    background: 'white'\n}\n\nexport default Footer\n","\nconst createRoutePath = (path) => process.env.NODE_ENV === 'development' ? `/${path}` : `/${btoa(path)}`\n\nexport const pagesPathsDict = {\n    start: '/',\n    question1: createRoutePath('beer-and-snacks'),\n    question2: createRoutePath('ping-pong'),\n    question3: createRoutePath('moon'),\n    question4: createRoutePath('rocket'),\n    question5: createRoutePath('frog'),\n    end: createRoutePath('end')\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\nimport { Typography, makeStyles, Container, Button } from '@material-ui/core'\n\nimport QuestionContainer, {\n    QuestionHead,\n    QuestionTitle,\n    QuestionBody,\n    QuestionActions\n} from '../../components/question-container/QuestionContainer'\nimport HelloAnimation from '../../animations/HelloAnimation'\nimport Background from '../../components/background/Background'\nimport Footer from '../../components/footer/Footer'\nimport { pagesPathsDict } from '../pagesPathsDict'\n\nconst useStyles = makeStyles({\n    questionHead: {\n        fontWeight: 'bold',\n        textShadow: '2px 2px 0 #4100c1, 4px 4px 0 #000000;',\n        color: '#61dbc1',\n        marginBottom: '10px'\n    },\n    questionText: {\n        color: 'darkblue',\n        textAlign: 'justify'\n    },\n    buttonRoot: {\n        width: '100%',\n    }\n})\n\nconst text = 'Привет. Это игра. Правила просты. Получаешь задание - выполняешь. И переходишь к новому заданию. А зачем это тебе? ' +\n    'Не пройдёшь - не узнаешь!'\n\nconst WelcomePage = (props) => {\n\n    const { history } = props\n    const classes = useStyles()\n\n    const handleButtonOnClick = () => {\n        return history.push(pagesPathsDict.question1)\n    }\n\n    return (\n        <>\n            <Background\n                color=\"yellow\"\n                withBottomMargin\n            >\n                <QuestionContainer>\n\n                    <QuestionHead>\n                        <HelloAnimation/>\n                    </QuestionHead>\n\n                    <QuestionTitle>\n                        <Container>\n                            <Typography variant=\"h2\" className={classes.questionHead}>\n                                На старт!\n                            </Typography>\n                        </Container>\n                    </QuestionTitle>\n\n                    <QuestionBody>\n                        <Container className={classes.questionText}>\n                            <Typography variant=\"h6\">\n                                {text}\n                            </Typography>\n                        </Container>\n                    </QuestionBody>\n\n                    <QuestionActions>\n                        <Button\n                            className={classes.buttonRoot}\n                            size=\"large\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleButtonOnClick}\n                        >\n                            Погнали!\n                        </Button>\n                    </QuestionActions>\n\n                </QuestionContainer>\n            </Background>\n            <Footer\n                textColor=\"darkblue\"\n                background=\"#61dbc1\"\n            />\n        </>\n    )\n}\n\nWelcomePage.propTypes = {\n    //prop from withRouter hoc\n    history: PropTypes.shape({\n        push: PropTypes.func\n    })\n}\n\nexport default withRouter(WelcomePage)\n","import React from 'react'\n\nimport Animation from '../components/animation/Animation'\n\nimport animation from './json/senya.json'\n\nexport default function SenyaAnimation() {\n    return (\n        <Animation animationData={animation} />\n    )\n}\n","import React from 'react'\n\nimport Animation from '../components/animation/Animation'\n\nimport animation from './json/qr.json'\n\nexport default function QrAnimation() {\n    return (\n        <Animation animationData={animation} />\n    )\n}\n","import React from 'react'\nimport { Typography, makeStyles, Container } from '@material-ui/core'\n\nimport QuestionContainer, {\n    QuestionHead,\n    QuestionTitle,\n    QuestionBody,\n} from '../../components/question-container/QuestionContainer'\nimport Background from '../../components/background/Background'\nimport SenyaAnimation from '../../animations/SenyaAnimation'\nimport QrAnimation from '../../animations/QrAnimation'\nimport Footer from '../../components/footer/Footer'\n\nconst useStyles = makeStyles({\n    questionHead: {\n        fontWeight: 'bold',\n        textShadow: '2px 2px 0 #603cd2, 4px 4px 0 #000000;',\n        color: '#ffffff',\n        marginBottom: '10px'\n    },\n    questionText: {\n        color: 'white',\n        textAlign: 'justify',\n        textShadow: '1px 1px 0 #000000;',\n        marginBottom: '15px'\n    },\n    buttonRoot: {\n        width: '100%',\n    }\n})\n\nconst text = 'Следующее задание ты найдёшь там, где находится обитель пенного и приют хрустящего в мирное время.'\n\nconst BeerAndSnacks = () => {\n\n    const classes = useStyles()\n\n    return (\n        <>\n            <Background color=\"#ff5656\">\n                <QuestionContainer>\n\n                    <QuestionHead>\n                        <SenyaAnimation/>\n                    </QuestionHead>\n\n                    <QuestionTitle>\n                        <Container>\n                            <Typography variant=\"h3\" className={classes.questionHead}>\n                                Похомячим?\n                            </Typography>\n                        </Container>\n                    </QuestionTitle>\n\n                    <QuestionBody>\n                        <Container className={classes.questionText}>\n                            <Typography variant=\"h6\">\n                                {text}\n                            </Typography>\n                        </Container>\n                    </QuestionBody>\n\n                    <QuestionBody>\n                        <Container style={{ height: '100px' }}>\n                            <QrAnimation/>\n                        </Container>\n                    </QuestionBody>\n\n                </QuestionContainer>\n            </Background>\n            <Footer\n                textColor=\"white\"\n                borderColor=\"darkblue\"\n                background=\"#603cd2\"\n            />\n        </>\n    )\n}\n\nexport default BeerAndSnacks\n","import React from 'react'\n\nimport Animation from '../components/animation/Animation'\n\nimport animation from './json/pingpong.json'\n\nexport default function PingPongAnimation() {\n    return (\n        <Animation animationData={animation} />\n    )\n}\n","import React from 'react'\nimport { Typography, makeStyles, Container } from '@material-ui/core'\n\nimport QuestionContainer, {\n    QuestionHead,\n    QuestionTitle,\n    QuestionBody,\n} from '../../components/question-container/QuestionContainer'\nimport Background from '../../components/background/Background'\nimport PingPongAnimation from '../../animations/PingPongAnimation'\nimport Footer from \"../../components/footer/Footer\";\n\nconst useStyles = makeStyles({\n    questionHead: {\n        fontWeight: 'bold',\n        textShadow: '2px 2px 0 #603cd2, 4px 4px 0 #000000;',\n        color: '#ffffff',\n        marginBottom: '10px'\n    },\n    questionText: {\n        color: 'white',\n        textAlign: 'justify',\n        textShadow: '1px 1px 0 #000000;',\n    },\n    buttonRoot: {\n        width: '100%',\n    }\n})\n\nconst text = 'Красавчик! Было легко? Новое задание! Помоги смехачу найти ракетку для игры. Где-то ты её видел, да?'\n\nconst PingPong = () => {\n\n    const classes = useStyles()\n\n    return (\n        <>\n            <Background color=\"#5661ff\">\n                <QuestionContainer>\n\n                    <QuestionHead>\n                        <PingPongAnimation/>\n                    </QuestionHead>\n\n                    <QuestionTitle>\n                        <Container>\n                            <Typography variant=\"h3\" className={classes.questionHead}>\n                                Герой приди!\n                            </Typography>\n                        </Container>\n                    </QuestionTitle>\n\n                    <QuestionBody>\n                        <Container className={classes.questionText}>\n                            <Typography variant=\"h6\">\n                                {text}\n                            </Typography>\n                        </Container>\n                    </QuestionBody>\n\n                </QuestionContainer>\n            </Background>\n            <Footer\n                textColor=\"white\"\n                borderColor=\"darkblue\"\n                background=\"#ff4341\"\n            />\n        </>\n    )\n}\n\nexport default PingPong\n","import React from 'react'\nimport {Typography, makeStyles, Container} from '@material-ui/core'\n\nimport QuestionContainer, {\n    QuestionHead,\n    QuestionTitle,\n    QuestionBody,\n} from '../../components/question-container/QuestionContainer'\nimport Background from '../../components/background/Background'\nimport animation from '../../animations/json/moon.json'\nimport Animation from '../../components/animation/Animation'\nimport Footer from \"../../components/footer/Footer\";\n\nconst useStyles = makeStyles({\n    questionHead: {\n        fontWeight: 'bold',\n        color: 'yellow',\n        margin: '10px 0'\n    },\n    questionText: {\n        color: 'white',\n        textAlign: 'justify',\n        textShadow: '1px 1px 0 #000000;',\n    },\n    buttonRoot: {\n        width: '100%',\n    }\n})\n\nconst text = 'Чисто гипотетически, если бы тебе было необходимо запульнуть кого-то на луну? Из квартиры? ' +\n    'Откуда это было бы удобнее всего сделать? Ну, чисто гипотетически, конечно.'\n\nconst Moon = () => {\n\n    const classes = useStyles()\n\n    return (\n        <>\n            <Background color=\"#010038\">\n                <QuestionContainer>\n\n                    <QuestionHead>\n                        <Animation animationData={animation}/>\n                    </QuestionHead>\n\n                    <QuestionTitle>\n                        <Container>\n                            <Typography variant=\"h3\" className={classes.questionHead}>\n                                Вторая космическая\n                            </Typography>\n                        </Container>\n                    </QuestionTitle>\n\n                    <QuestionBody>\n                        <Container className={classes.questionText}>\n                            <Typography variant=\"h6\">\n                                {text}\n                            </Typography>\n                        </Container>\n                    </QuestionBody>\n\n                </QuestionContainer>\n            </Background>\n            <Footer\n                textColor=\"#000000\"\n                borderColor=\"#000000\"\n                background=\"yellow\"\n            />\n        </>\n    )\n}\n\nexport default Moon\n","import React from 'react'\nimport {Typography, makeStyles, Container} from '@material-ui/core'\n\nimport QuestionContainer, {\n    QuestionHead,\n    QuestionTitle,\n    QuestionBody,\n} from '../../components/question-container/QuestionContainer'\nimport Background from '../../components/background/Background'\nimport animation from '../../animations/json/rocket.json'\nimport Animation from '../../components/animation/Animation'\nimport Footer from \"../../components/footer/Footer\";\n\nconst useStyles = makeStyles({\n    questionHead: {\n        fontWeight: 'bold',\n        color: '#ca00a6',\n        textShadow: '2px 2px 0 #7d00cc, 4px 4px 0 #0411c3;',\n        margin: '10px 0'\n    },\n    questionText: {\n        color: '#c300a0',\n        textAlign: 'justify',\n    },\n    buttonRoot: {\n        width: '100%',\n    }\n})\n\nconst text = 'В какое же удивительное время мы живём. Труд сотен тысяч учёных дали нам возможность выращивать органы, ' +\n    'чипировать людей, летать в космос. ' +\n    'Но сколько ещё учёных нужно, чтобы не добавлять сам знаешь что в жареные мюсли? Хорошо, что мы готовим для учёных контрольный ' +\n    'образец, складывая САМ ЗНАЕШЬ ЧТО САМ ЗНАЕШЬ КУДА. Кстати, проверь, эти хитрецы не сбежали?'\n\nconst Rocket = () => {\n\n    const classes = useStyles()\n\n    return (\n        <>\n            <Background color=\"#ffffff\">\n                <QuestionContainer>\n\n                    <QuestionHead>\n                        <Animation animationData={animation}/>\n                    </QuestionHead>\n\n                    <QuestionTitle>\n                        <Container>\n                            <Typography variant=\"h3\" className={classes.questionHead}>\n                                Прогресс\n                            </Typography>\n                        </Container>\n                    </QuestionTitle>\n\n                    <QuestionBody>\n                        <Container className={classes.questionText}>\n                            <Typography variant=\"h6\">\n                                {text}\n                            </Typography>\n                        </Container>\n                    </QuestionBody>\n\n                </QuestionContainer>\n            </Background>\n            <Footer\n                textColor=\"white\"\n                borderColor=\"#7d00cc\"\n                background=\"#ca00a6\"\n            />\n        </>\n    )\n}\n\nexport default Rocket\n","import React from 'react'\nimport {Typography, makeStyles, Container} from '@material-ui/core'\n\nimport QuestionContainer, {\n    QuestionHead,\n    QuestionTitle,\n    QuestionBody,\n} from '../../components/question-container/QuestionContainer'\nimport Background from '../../components/background/Background'\nimport animation from '../../animations/json/pepe.json'\nimport Animation from '../../components/animation/Animation'\nimport Footer from \"../../components/footer/Footer\";\n\nconst useStyles = makeStyles({\n    questionHead: {\n        fontWeight: 'bold',\n        color: '#ffffff',\n        textShadow: '2px 2px 0 #0440fa, 4px 4px 0 #000000;',\n        margin: '10px 0'\n    },\n    questionText: {\n        color: '#ffffff',\n        textShadow: '1px 1px 0 #000000;',\n        textAlign: 'justify',\n    },\n    buttonRoot: {\n        width: '100%',\n    }\n})\n\nconst text = 'Ну что. А вот и последняя загадка. Ты отлично справился и похоже готов забрать приз. Можешь??? ' +\n    'Один из твоих подарков заспаунился второй раз! Вот это удача! скорее найди его! (Внимание: из-за искревления ' +\n    'пространства изображение на упаковке может не совпадать с содержимым)'\n\nconst Frog = () => {\n\n    const classes = useStyles()\n\n    return (\n        <>\n            <Background color=\"#38c172\">\n                <QuestionContainer>\n\n                    <QuestionHead>\n                        <Animation animationData={animation}/>\n                    </QuestionHead>\n\n                    <QuestionTitle>\n                        <Container>\n                            <Typography variant=\"h3\" className={classes.questionHead}>\n                                Я могу???\n                            </Typography>\n                        </Container>\n                    </QuestionTitle>\n\n                    <QuestionBody>\n                        <Container className={classes.questionText}>\n                            <Typography variant=\"h6\">\n                                {text}\n                            </Typography>\n                        </Container>\n                    </QuestionBody>\n\n                </QuestionContainer>\n            </Background>\n            <Footer\n                textColor=\"white\"\n                borderColor=\"#000000\"\n                background=\"#0440fa\"\n            />\n        </>\n    )\n}\n\nexport default Frog\n","import React from 'react'\nimport { Typography, makeStyles, Container } from '@material-ui/core'\n\nimport QuestionContainer, {\n    QuestionHead,\n    QuestionTitle,\n    QuestionBody,\n} from '../../components/question-container/QuestionContainer'\nimport Background from '../../components/background/Background'\nimport Animation from '../../components/animation/Animation'\nimport dancingDog from '../../animations/json/dancing-dog.json'\nimport Footer from '../../components/footer/Footer'\n\nconst useStyles = makeStyles({\n    questionHead: {\n        fontWeight: 'bold',\n        textShadow: '2px 2px 0 #4100c1, 4px 4px 0 #000000;',\n        color: '#ff3f54',\n        marginBottom: '10px'\n    },\n    questionText: {\n        color: '#4100c1',\n        textAlign: 'justify',\n    },\n    buttonRoot: {\n        width: '100%',\n    }\n})\n\nconst text = 'Артём, это подарок для тебя от нас. Носи его с удовольствием. И, пересматривая \"ЖиЖу\" через много лет, ' +\n    'вспоминай это волшебное время юности. Аня (Подарок) и Максим (Квест).'\n\nconst FinalPage = () => {\n\n    const classes = useStyles()\n\n    return (\n        <>\n            <Background color=\"yellow\">\n                <QuestionContainer>\n\n                    <QuestionHead>\n                        <Animation animationData={dancingDog}/>\n                    </QuestionHead>\n\n                    <QuestionTitle>\n                        <Container>\n                            <Typography variant=\"h2\" className={classes.questionHead}>\n                                С ДР!\n                            </Typography>\n                        </Container>\n                    </QuestionTitle>\n\n                    <QuestionBody>\n                        <Container className={classes.questionText}>\n                            <Typography variant=\"h6\">\n                                {text}\n                            </Typography>\n                        </Container>\n                    </QuestionBody>\n\n                </QuestionContainer>\n            </Background>\n            <Footer\n                textColor=\"white\"\n                borderColor=\"#000000\"\n                background=\"#ff3f54\"\n            />\n        </>\n    )\n}\n\nexport default FinalPage\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport WelcomePage from './pages/welcome-page/WelcomePage'\nimport BeerAndSnacks from './pages/beer-and-snacks/BeerAndSnacks'\nimport PingPong from './pages/ping-pong/PingPong'\nimport Moon from './pages/moon/Moon'\nimport Rocket from './pages/rocket/Rocket'\nimport Frog from './pages/frog/Frog'\nimport FinalPage from './pages/final-page/FinalPage'\nimport { pagesPathsDict } from './pages/pagesPathsDict'\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100vw',\n        minHeight: '100vh',\n        overflowX: 'hidden'\n    }\n})\n\nfunction App() {\n\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root} >\n            <Router>\n                <Switch>\n                    <Route exact path={pagesPathsDict.start}>\n                        <WelcomePage />\n                    </Route>\n                    <Route path={pagesPathsDict.question1}>\n                        <BeerAndSnacks />\n                    </Route>\n                    <Route path={pagesPathsDict.question2}>\n                        <PingPong />\n                    </Route>\n                    <Route path={pagesPathsDict.question3}>\n                        <Moon />\n                    </Route>\n                    <Route path={pagesPathsDict.question4}>\n                        <Rocket />\n                    </Route>\n                    <Route path={pagesPathsDict.question5}>\n                        <Frog />\n                    </Route>\n                    <Route path={pagesPathsDict.end}>\n                        <FinalPage />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
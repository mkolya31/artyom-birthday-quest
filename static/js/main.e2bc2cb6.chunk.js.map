{"version":3,"sources":["components/question-container/QuestionContainer.jsx","components/animation/Animation.jsx","animations/HelloAnimation.jsx","components/background/Background.jsx","pages/pagesPathsDict.js","pages/welcome-page/WelcomePage.jsx","animations/SenyaAnimation.jsx","animations/QrAnimation.jsx","pages/beer-and-snacks/BeerAndSnacks.jsx","animations/PingPongAnimation.jsx","pages/ping-pong/PingPong.jsx","pages/moon/Moon.jsx","App.js","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["QuestionHead","props","children","Grid","item","xs","Container","QuestionTitle","QuestionBody","useActionStyles","makeStyles","root","textAlign","margin","QuestionActions","classes","className","QuestionContainer","container","Animation","animationData","options","HelloAnimation","animation","useStyles","background","height","minHeight","padding","color","width","display","justifyContent","horizontalAlign","alignItems","verticalAlign","Background","defaultProps","createRoutePath","path","btoa","pagesPathsDict","start","question1","question2","question3","end","questionHead","fontWeight","textShadow","marginBottom","questionText","buttonRoot","withRouter","history","Typography","variant","Button","size","onClick","push","SenyaAnimation","QrAnimation","BeerAndSnacks","style","PingPongAnimation","PingPong","Moon","App","console","log","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oOAMaA,EAAe,SAACC,GAAW,IAE5BC,EAAaD,EAAbC,SAER,OACI,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACC,EAAA,EAAD,KACKJ,KAOJK,EAAgB,SAACN,GAAW,IAE7BC,EAAaD,EAAbC,SAER,OACI,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACVH,IAKAM,EAAe,SAACP,GAAW,IAE5BC,EAAaD,EAAbC,SAER,OACI,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACVH,IAKPO,EAAkBC,YAAW,CAC/BC,KAAM,CACFC,UAAW,SACXC,OAAQ,YAIHC,EAAkB,SAACb,GAAW,IAE/BC,EAAaD,EAAbC,SACFa,EAAUN,IAEhB,OACI,kBAACH,EAAA,EAAD,CAAWU,UAAWD,EAAQJ,MAC1B,kBAACR,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACVH,KAuBFe,MAjBf,SAA2BhB,GAAQ,IAEvBC,EAAaD,EAAbC,SAER,OACI,kBAACI,EAAA,EAAD,KACI,kBAACH,EAAA,EAAD,CAAMe,WAAS,GACVhB,K,iBCjDFiB,MAjBf,SAAmBlB,GAAQ,IAEfmB,EAAkBnB,EAAlBmB,cAER,OACI,kBAAC,IAAD,CACIC,QAAS,CACLD,oB,QCLD,SAASE,IACpB,OACI,kBAAC,EAAD,CAAWF,cAAeG,ICJlC,IAAMC,EAAYd,YAAW,CACzBe,WAAY,CACRC,OAAQ,OACRC,UAAW,QACXC,QAAS,SACTH,WAAY,SAAAxB,GAAK,OAAIA,EAAM4B,QAE/BX,UAAW,CACPY,MAAO,OACPJ,OAAQ,OACRK,QAAS,OACTC,eAAgB,SAAA/B,GAAK,OAAIA,EAAMgC,iBAC/BC,WAAY,SAAAjC,GAAK,OAAIA,EAAMkC,kBAI5B,SAASC,EAAWnC,GAAQ,IAEvBC,EAAaD,EAAbC,SACFa,EAAUS,EAAUvB,GAE1B,OACI,yBAAKe,UAAWD,EAAQU,YACpB,yBAAKT,UAAWD,EAAQG,WACnBhB,IAajBkC,EAAWC,aAAe,CACtBnC,SAAU,GACV2B,MAAO,GACPI,gBAAiB,SACjBE,cAAe,UAGJC,QC/CTE,EAAkB,SAACC,GAAD,MAAU,WAA0DC,KAAKD,KAEpFE,EAAiB,CAC1BC,MAAO,IACPC,UAAWL,EAAgB,mBAC3BM,UAAWN,EAAgB,aAC3BO,UAAWP,EAAgB,QAC3BQ,IAAKR,EAAgB,QCOnBd,EAAYd,YAAW,CACzBqC,aAAc,CACVC,WAAY,OACZC,WAAY,wCACZpB,MAAO,UACPqB,aAAc,QAElBC,aAAc,CACVtB,MAAO,WACPjB,UAAW,WAEfwC,WAAY,CACRtB,MAAO,UAgEAuB,eAzDK,SAACpD,GAAW,IAEpBqD,EAAYrD,EAAZqD,QACFvC,EAAUS,IAMhB,OACI,kBAAC,EAAD,CAAYK,MAAM,UACd,kBAAC,EAAD,KAEI,kBAAC,EAAD,KACI,kBAACP,EAAD,OAGJ,kBAAC,EAAD,KACI,kBAAChB,EAAA,EAAD,KACI,kBAACiD,EAAA,EAAD,CAAYC,QAAQ,KAAKxC,UAAWD,EAAQgC,cAA5C,kDAMR,kBAAC,EAAD,KACI,kBAACzC,EAAA,EAAD,CAAWU,UAAWD,EAAQoC,cAC1B,kBAACI,EAAA,EAAD,CAAYC,QAAQ,MA9B/B,4lBAoCG,kBAAC,EAAD,KACI,kBAACC,EAAA,EAAD,CACIzC,UAAWD,EAAQqC,WACnBM,KAAK,QACLF,QAAQ,YACR3B,MAAM,UACN8B,QAlCQ,WACxB,OAAOL,EAAQM,KAAKnB,EAAeE,aA4BvB,qD,QC9DL,SAASkB,IACpB,OACI,kBAAC,EAAD,CAAWzC,cAAeG,I,YCFnB,SAASuC,IACpB,OACI,kBAAC,EAAD,CAAW1C,cAAeG,ICIlC,IAAMC,EAAYd,YAAW,CACzBqC,aAAc,CACVC,WAAY,OACZC,WAAY,wCACZpB,MAAO,UACPqB,aAAc,QAElBC,aAAc,CACVtB,MAAO,QACPjB,UAAW,UACXqC,WAAY,qBACZC,aAAc,QAElBE,WAAY,CACRtB,MAAO,UA6CAiC,EAvCO,WAElB,IAAMhD,EAAUS,IAEhB,OACI,kBAAC,EAAD,CAAYK,MAAM,WACd,kBAAC,EAAD,KAEI,kBAAC,EAAD,KACI,kBAACgC,EAAD,OAGJ,kBAAC,EAAD,KACI,kBAACvD,EAAA,EAAD,KACI,kBAACiD,EAAA,EAAD,CAAYC,QAAQ,KAAKxC,UAAWD,EAAQgC,cAA5C,6DAMR,kBAAC,EAAD,KACI,kBAACzC,EAAA,EAAD,CAAWU,UAAWD,EAAQoC,cAC1B,kBAACI,EAAA,EAAD,CAAYC,QAAQ,MAxB/B,kgBA8BG,kBAAC,EAAD,KACI,kBAAClD,EAAA,EAAD,CAAW0D,MAAO,CAAEtC,OAAQ,UACxB,kBAACoC,EAAD,W,QCxDT,SAASG,IACpB,OACI,kBAAC,EAAD,CAAW7C,cAAeG,ICGlC,IAAMC,EAAYd,YAAW,CACzBqC,aAAc,CACVC,WAAY,OACZC,WAAY,wCACZpB,MAAO,UACPqB,aAAc,QAElBC,aAAc,CACVtB,MAAO,QACPjB,UAAW,UACXqC,WAAY,qBACZC,aAAc,QAElBE,WAAY,CACRtB,MAAO,UAuCAoC,EAjCE,WAEb,IAAMnD,EAAUS,IAEhB,OACI,kBAAC,EAAD,CAAYK,MAAM,WACd,kBAAC,EAAD,KAEI,kBAAC,EAAD,KACI,kBAACoC,EAAD,OAGJ,kBAAC,EAAD,KACI,kBAAC3D,EAAA,EAAD,KACI,kBAACiD,EAAA,EAAD,CAAYC,QAAQ,KAAKxC,UAAWD,EAAQgC,cAA5C,oEAMR,kBAAC,EAAD,KACI,kBAACzC,EAAA,EAAD,CAAWU,UAAWD,EAAQoC,cAC1B,kBAACI,EAAA,EAAD,CAAYC,QAAQ,MAxB/B,uT,QCjBPhC,EAAYd,YAAW,CACzBqC,aAAc,CACVC,WAAY,OACZC,WAAY,mBACZpB,MAAO,UACPhB,OAAQ,UAEZsC,aAAc,CACVtB,MAAO,QACPjB,UAAW,UACXqC,WAAY,qBACZC,aAAc,QAElBE,WAAY,CACRtB,MAAO,UAwCAqC,EAjCF,WAET,IAAMpD,EAAUS,IAEhB,OACI,kBAAC,EAAD,CAAYK,MAAM,WACd,kBAAC,EAAD,KAEI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAWT,cAAeG,KAG9B,kBAAC,EAAD,KACI,kBAACjB,EAAA,EAAD,KACI,kBAACiD,EAAA,EAAD,CAAYC,QAAQ,KAAKxC,UAAWD,EAAQgC,cAA5C,6GAMR,kBAAC,EAAD,KACI,kBAACzC,EAAA,EAAD,CAAWU,UAAWD,EAAQoC,cAC1B,kBAACI,EAAA,EAAD,CAAYC,QAAQ,MAzB/B,i1BCpBPhC,EAAYd,YAAW,CACzBC,KAAM,CACFmB,MAAO,QACPH,UAAW,WA+BJyC,MA3Bf,WAEI,IAAMrD,EAAUS,IAGhB,OAFA6C,QAAQC,IAAI7B,GAGR,yBAAKzB,UAAWD,EAAQJ,MACpB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO4D,OAAK,EAAChC,KAAME,EAAeC,OAC9B,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOH,KAAME,EAAeE,WACxB,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOJ,KAAME,EAAeG,WACxB,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOL,KAAME,EAAeI,WACxB,kBAAC,EAAD,WCxBJ2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpB,QAAQoB,MAAMA,EAAMC,a","file":"static/js/main.e2bc2cb6.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport Container from '@material-ui/core/Container'\nimport { makeStyles } from '@material-ui/core/styles'\n\nexport const QuestionHead = (props) => {\n\n    const { children } = props\n\n    return (\n        <Grid item xs={12}>\n            <Container>\n                {children}\n            </Container>\n        </Grid>\n    )\n}\n\n\nexport const QuestionTitle = (props) => {\n\n    const { children } = props\n\n    return (\n        <Grid item xs={12}>\n            {children}\n        </Grid>\n    )\n}\n\nexport const QuestionBody = (props) => {\n\n    const { children } = props\n\n    return (\n        <Grid item xs={12}>\n            {children}\n        </Grid>\n    )\n}\n\nconst useActionStyles = makeStyles({\n    root: {\n        textAlign: 'center',\n        margin: '10px 0'\n    }\n})\n\nexport const QuestionActions = (props) => {\n\n    const { children } = props\n    const classes = useActionStyles()\n\n    return (\n        <Container className={classes.root} >\n            <Grid item xs={12}>\n                {children}\n            </Grid>\n        </Container>\n    )\n}\n\nfunction QuestionContainer(props) {\n\n    const { children } = props\n\n    return (\n        <Container>\n            <Grid container>\n                {children}\n            </Grid>\n        </Container>\n    )\n}\n\nQuestionContainer.propTypes = {\n    children: PropTypes.node\n}\n\nexport default QuestionContainer\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Lottie from 'lottie-react-web'\n\nfunction Animation(props) {\n\n    const { animationData } = props\n\n    return (\n        <Lottie\n            options={{\n                animationData\n            }}\n        />\n    )\n}\n\nAnimation.propTypes = {\n    animationData: PropTypes.object.isRequired\n}\n\nexport default Animation\n","import React from 'react'\n\nimport Animation from '../components/animation/Animation'\n\nimport animation from './json/hello.json'\n\nexport default function HelloAnimation() {\n    return (\n        <Animation animationData={animation} />\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    background: {\n        height: '100%',\n        minHeight: '100vh',\n        padding: '15px 0',\n        background: props => props.color,\n    },\n    container: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: props => props.horizontalAlign,\n        alignItems: props => props.verticalAlign\n    }\n})\n\nexport function Background(props) {\n\n    const { children } = props\n    const classes = useStyles(props)\n\n    return (\n        <div className={classes.background}>\n            <div className={classes.container}>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nBackground.propTypes = {\n    children: PropTypes.node,\n    color: PropTypes.string,\n    horizontalAlign: PropTypes.oneOf(['center', 'start', 'end', 'space-around', 'space-between']),\n    verticalAlign: PropTypes.oneOf(['center', 'start', 'end'])\n}\n\nBackground.defaultProps = {\n    children: '',\n    color: '',\n    horizontalAlign: 'center',\n    verticalAlign: 'center'\n}\n\nexport default Background\n","\nconst createRoutePath = (path) => process.env.NODE_ENV === 'development' ? `/${path}` : `/${btoa(path)}`\n\nexport const pagesPathsDict = {\n    start: '/',\n    question1: createRoutePath('beer-and-snacks'),\n    question2: createRoutePath('ping-pong'),\n    question3: createRoutePath('moon'),\n    end: createRoutePath('end')\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\nimport { Typography, makeStyles, Container, Button } from '@material-ui/core'\n\nimport QuestionContainer, {\n    QuestionHead,\n    QuestionTitle,\n    QuestionBody,\n    QuestionActions\n} from '../../components/question-container/QuestionContainer'\nimport HelloAnimation from '../../animations/HelloAnimation'\nimport Background from '../../components/background/Background'\nimport { pagesPathsDict } from '../pagesPathsDict'\n\nconst useStyles = makeStyles({\n    questionHead: {\n        fontWeight: 'bold',\n        textShadow: '2px 2px 0 #4100c1, 4px 4px 0 #000000;',\n        color: '#61dbc1',\n        marginBottom: '10px'\n    },\n    questionText: {\n        color: 'darkblue',\n        textAlign: 'justify'\n    },\n    buttonRoot: {\n        width: '100%',\n    }\n})\n\nconst text = 'Привет. Это игра. Правила просты: я даю задание, выполняешь - переходишь к новому заданию. А зачем это тебе? ' +\n    'Ответ в конце!'\n\nconst WelcomePage = (props) => {\n\n    const { history } = props\n    const classes = useStyles()\n\n    const handleButtonOnClick = () => {\n        return history.push(pagesPathsDict.question1)\n    }\n\n    return (\n        <Background color=\"yellow\">\n            <QuestionContainer>\n\n                <QuestionHead>\n                    <HelloAnimation/>\n                </QuestionHead>\n\n                <QuestionTitle>\n                    <Container>\n                        <Typography variant=\"h2\" className={classes.questionHead}>\n                            На старт!\n                        </Typography>\n                    </Container>\n                </QuestionTitle>\n\n                <QuestionBody>\n                    <Container className={classes.questionText}>\n                        <Typography variant=\"h6\">\n                            {text}\n                        </Typography>\n                    </Container>\n                </QuestionBody>\n\n                <QuestionActions>\n                    <Button\n                        className={classes.buttonRoot}\n                        size=\"large\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleButtonOnClick}\n                    >\n                        Погнали!\n                    </Button>\n                </QuestionActions>\n\n            </QuestionContainer>\n        </Background>\n    )\n}\n\nWelcomePage.propTypes = {\n    //prop from withRouter hoc\n    history: PropTypes.shape({\n        push: PropTypes.func\n    })\n}\n\nexport default withRouter(WelcomePage)\n","import React from 'react'\n\nimport Animation from '../components/animation/Animation'\n\nimport animation from './json/senya.json'\n\nexport default function SenyaAnimation() {\n    return (\n        <Animation animationData={animation} />\n    )\n}\n","import React from 'react'\n\nimport Animation from '../components/animation/Animation'\n\nimport animation from './json/qr.json'\n\nexport default function QrAnimation() {\n    return (\n        <Animation animationData={animation} />\n    )\n}\n","import React from 'react'\nimport { Typography, makeStyles, Container } from '@material-ui/core'\n\nimport QuestionContainer, {\n    QuestionHead,\n    QuestionTitle,\n    QuestionBody,\n} from '../../components/question-container/QuestionContainer'\nimport Background from '../../components/background/Background'\nimport SenyaAnimation from '../../animations/SenyaAnimation'\nimport QrAnimation from '../../animations/QrAnimation'\n\nconst useStyles = makeStyles({\n    questionHead: {\n        fontWeight: 'bold',\n        textShadow: '2px 2px 0 #603cd2, 4px 4px 0 #000000;',\n        color: '#ffffff',\n        marginBottom: '10px'\n    },\n    questionText: {\n        color: 'white',\n        textAlign: 'justify',\n        textShadow: '1px 1px 0 #000000;',\n        marginBottom: '15px'\n    },\n    buttonRoot: {\n        width: '100%',\n    }\n})\n\nconst text = 'Следующее задание ты найдёшь там, где находится обитель пенного и приют хрустящего в мирное время.'\n\nconst BeerAndSnacks = () => {\n\n    const classes = useStyles()\n\n    return (\n        <Background color=\"#ff5656\">\n            <QuestionContainer>\n\n                <QuestionHead>\n                    <SenyaAnimation/>\n                </QuestionHead>\n\n                <QuestionTitle>\n                    <Container>\n                        <Typography variant=\"h3\" className={classes.questionHead}>\n                            Похомячим?\n                        </Typography>\n                    </Container>\n                </QuestionTitle>\n\n                <QuestionBody>\n                    <Container className={classes.questionText}>\n                        <Typography variant=\"h6\">\n                            {text}\n                        </Typography>\n                    </Container>\n                </QuestionBody>\n\n                <QuestionBody>\n                    <Container style={{ height: '100px' }}>\n                        <QrAnimation />\n                    </Container>\n                </QuestionBody>\n\n            </QuestionContainer>\n        </Background>\n    )\n}\n\nexport default BeerAndSnacks\n","import React from 'react'\n\nimport Animation from '../components/animation/Animation'\n\nimport animation from './json/pingpong.json'\n\nexport default function PingPongAnimation() {\n    return (\n        <Animation animationData={animation} />\n    )\n}\n","import React from 'react'\nimport { Typography, makeStyles, Container } from '@material-ui/core'\n\nimport QuestionContainer, {\n    QuestionHead,\n    QuestionTitle,\n    QuestionBody,\n} from '../../components/question-container/QuestionContainer'\nimport Background from '../../components/background/Background'\nimport PingPongAnimation from '../../animations/PingPongAnimation'\n\nconst useStyles = makeStyles({\n    questionHead: {\n        fontWeight: 'bold',\n        textShadow: '2px 2px 0 #603cd2, 4px 4px 0 #000000;',\n        color: '#ffffff',\n        marginBottom: '10px'\n    },\n    questionText: {\n        color: 'white',\n        textAlign: 'justify',\n        textShadow: '1px 1px 0 #000000;',\n        marginBottom: '15px'\n    },\n    buttonRoot: {\n        width: '100%',\n    }\n})\n\nconst text = 'Помоги смехачу найти ракетку для игры. Где-то ты её видел, да?'\n\nconst PingPong = () => {\n\n    const classes = useStyles()\n\n    return (\n        <Background color=\"#5661ff\">\n            <QuestionContainer>\n\n                <QuestionHead>\n                    <PingPongAnimation />\n                </QuestionHead>\n\n                <QuestionTitle>\n                    <Container>\n                        <Typography variant=\"h3\" className={classes.questionHead}>\n                            Герой приди!\n                        </Typography>\n                    </Container>\n                </QuestionTitle>\n\n                <QuestionBody>\n                    <Container className={classes.questionText}>\n                        <Typography variant=\"h6\">\n                            {text}\n                        </Typography>\n                    </Container>\n                </QuestionBody>\n\n            </QuestionContainer>\n        </Background>\n    )\n}\n\nexport default PingPong\n","import React from 'react'\nimport { Typography, makeStyles, Container } from '@material-ui/core'\n\nimport QuestionContainer, {\n    QuestionHead,\n    QuestionTitle,\n    QuestionBody,\n} from '../../components/question-container/QuestionContainer'\nimport Background from '../../components/background/Background'\nimport animation from '../../animations/json/moon.json'\nimport Animation from '../../components/animation/Animation'\n\nconst useStyles = makeStyles({\n    questionHead: {\n        fontWeight: 'bold',\n        textShadow: '0 0 20px #e19202',\n        color: '#e19202',\n        margin: '10px 0'\n    },\n    questionText: {\n        color: 'white',\n        textAlign: 'justify',\n        textShadow: '1px 1px 0 #000000;',\n        marginBottom: '15px'\n    },\n    buttonRoot: {\n        width: '100%',\n    }\n})\n\nconst text = 'Чисто гипотетически, если бы тебе было необходимо запульнуть кого-то на луну? Из квартиры? ' +\n    'Откуда это было бы удобнее всего сделать? Ну, чисто гипотетически конечно.'\n\nconst Moon = () => {\n\n    const classes = useStyles()\n\n    return (\n        <Background color=\"#010038\">\n            <QuestionContainer>\n\n                <QuestionHead>\n                    <Animation animationData={animation} />\n                </QuestionHead>\n\n                <QuestionTitle>\n                    <Container>\n                        <Typography variant=\"h3\" className={classes.questionHead}>\n                            Вторая космическая\n                        </Typography>\n                    </Container>\n                </QuestionTitle>\n\n                <QuestionBody>\n                    <Container className={classes.questionText}>\n                        <Typography variant=\"h6\">\n                            {text}\n                        </Typography>\n                    </Container>\n                </QuestionBody>\n\n            </QuestionContainer>\n        </Background>\n    )\n}\n\nexport default Moon\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport WelcomePage from './pages/welcome-page/WelcomePage'\nimport BeerAndSnacks from './pages/beer-and-snacks/BeerAndSnacks'\nimport PingPong from './pages/ping-pong/PingPong'\nimport Moon from './pages/moon/Moon'\nimport { pagesPathsDict } from './pages/pagesPathsDict'\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100vw',\n        minHeight: '100vh',\n    }\n})\n\nfunction App() {\n\n    const classes = useStyles()\n    console.log(pagesPathsDict)\n\n    return (\n        <div className={classes.root} >\n            <Router>\n                <Switch>\n                    <Route exact path={pagesPathsDict.start}>\n                        <WelcomePage />\n                    </Route>\n                    <Route path={pagesPathsDict.question1}>\n                        <BeerAndSnacks />\n                    </Route>\n                    <Route path={pagesPathsDict.question2}>\n                        <PingPong />\n                    </Route>\n                    <Route path={pagesPathsDict.question3}>\n                        <Moon />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
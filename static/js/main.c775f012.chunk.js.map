{"version":3,"sources":["components/background/Background.jsx","components/question-container/QuestionContainer.jsx","components/animation/Animation.jsx","animations/HelloAnimation.jsx","pages/welcome-page/WelcomePage.jsx","animations/SenyaAnimation.jsx","animations/QrAnimation.jsx","pages/question-1/FirstQuestion.jsx","App.js","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["useStyles","makeStyles","background","height","minHeight","padding","props","color","container","width","display","justifyContent","horizontalAlign","alignItems","verticalAlign","Background","children","classes","className","defaultProps","QuestionHead","Grid","item","xs","Container","QuestionTitle","QuestionBody","useActionStyles","root","textAlign","margin","QuestionActions","QuestionContainer","Animation","animationData","options","HelloAnimation","animation","questionHead","fontWeight","textShadow","marginBottom","questionText","buttonRoot","withRouter","history","Typography","variant","Button","size","onClick","push","SenyaAnimation","QrAnimation","FirstQuestion","style","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gMAIMA,EAAYC,YAAW,CACzBC,WAAY,CACRC,OAAQ,OACRC,UAAW,QACXC,QAAS,SACTH,WAAY,SAAAI,GAAK,OAAIA,EAAMC,QAE/BC,UAAW,CACPC,MAAO,OACPN,OAAQ,OACRO,QAAS,OACTC,eAAgB,SAAAL,GAAK,OAAIA,EAAMM,iBAC/BC,WAAY,SAAAP,GAAK,OAAIA,EAAMQ,kBAI5B,SAASC,EAAWT,GAAQ,IAEvBU,EAAaV,EAAbU,SACFC,EAAUjB,EAAUM,GAE1B,OACI,yBAAKY,UAAWD,EAAQf,YACpB,yBAAKgB,UAAWD,EAAQT,WACnBQ,IAajBD,EAAWI,aAAe,CACtBH,SAAU,GACVT,MAAO,GACPK,gBAAiB,SACjBE,cAAe,UAGJC,Q,oCC1CFK,EAAe,SAACd,GAAW,IAE5BU,EAAaV,EAAbU,SAER,OACI,kBAACK,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACC,EAAA,EAAD,KACKR,KAOJS,EAAgB,SAACnB,GAAW,IAE7BU,EAAaV,EAAbU,SAER,OACI,kBAACK,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACVP,IAKAU,EAAe,SAACpB,GAAW,IAE5BU,EAAaV,EAAbU,SAER,OACI,kBAACK,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACVP,IAKPW,EAAkB1B,YAAW,CAC/B2B,KAAM,CACFC,UAAW,SACXC,OAAQ,YAIHC,EAAkB,SAACzB,GAAW,IAE/BU,EAAaV,EAAbU,SACFC,EAAUU,IAEhB,OACI,kBAACH,EAAA,EAAD,CAAWN,UAAWD,EAAQW,MAC1B,kBAACP,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACVP,KAuBFgB,MAjBf,SAA2B1B,GAAQ,IAEvBU,EAAaV,EAAbU,SAER,OACI,kBAACQ,EAAA,EAAD,KACI,kBAACH,EAAA,EAAD,CAAMb,WAAS,GACVQ,K,iBCjDFiB,MAjBf,SAAmB3B,GAAQ,IAEf4B,EAAkB5B,EAAlB4B,cAER,OACI,kBAAC,IAAD,CACIC,QAAS,CACLD,oB,QCLD,SAASE,IACpB,OACI,kBAAC,EAAD,CAAWF,cAAeG,ICMlC,IAAMrC,EAAYC,YAAW,CACzBqC,aAAc,CACVC,WAAY,OACZC,WAAY,wCACZjC,MAAO,UACPkC,aAAc,QAElBC,aAAc,CACVnC,MAAO,WACPsB,UAAW,WAEfc,WAAY,CACRlC,MAAO,UAgEAmC,eAzDK,SAACtC,GAAW,IAEpBuC,EAAYvC,EAAZuC,QACF5B,EAAUjB,IAMhB,OACI,kBAAC,EAAD,CAAYO,MAAM,UACd,kBAAC,EAAD,KAEI,kBAAC,EAAD,KACI,kBAAC6B,EAAD,OAGJ,kBAAC,EAAD,KACI,kBAACZ,EAAA,EAAD,KACI,kBAACsB,EAAA,EAAD,CAAYC,QAAQ,KAAK7B,UAAWD,EAAQqB,cAA5C,kDAMR,kBAAC,EAAD,KACI,kBAACd,EAAA,EAAD,CAAWN,UAAWD,EAAQyB,cAC1B,kBAACI,EAAA,EAAD,CAAYC,QAAQ,MA9B/B,4lBAoCG,kBAAC,EAAD,KACI,kBAACC,EAAA,EAAD,CACI9B,UAAWD,EAAQ0B,WACnBM,KAAK,QACLF,QAAQ,YACRxC,MAAM,UACN2C,QAlCQ,WACxB,OAAOL,EAAQM,KAAK,kBA4BR,qD,QC7DL,SAASC,IACpB,OACI,kBAAC,EAAD,CAAWlB,cAAeG,I,YCFnB,SAASgB,IACpB,OACI,kBAAC,EAAD,CAAWnB,cAAeG,ICKlC,IAAMrC,EAAYC,YAAW,CACzBqC,aAAc,CACVC,WAAY,OACZC,WAAY,wCACZjC,MAAO,UACPkC,aAAc,QAElBC,aAAc,CACVnC,MAAO,QACPsB,UAAW,UACXW,WAAY,qBACZC,aAAc,QAElBE,WAAY,CACRlC,MAAO,UA6CA6C,EAvCO,WAElB,IAAMrC,EAAUjB,IAEhB,OACI,kBAAC,EAAD,CAAYO,MAAM,WACd,kBAAC,EAAD,KAEI,kBAAC,EAAD,KACI,kBAAC6C,EAAD,OAGJ,kBAAC,EAAD,KACI,kBAAC5B,EAAA,EAAD,KACI,kBAACsB,EAAA,EAAD,CAAYC,QAAQ,KAAK7B,UAAWD,EAAQqB,cAA5C,6DAMR,kBAAC,EAAD,KACI,kBAACd,EAAA,EAAD,CAAWN,UAAWD,EAAQyB,cAC1B,kBAACI,EAAA,EAAD,CAAYC,QAAQ,MAxB/B,kgBA8BG,kBAAC,EAAD,KACI,kBAACvB,EAAA,EAAD,CAAW+B,MAAO,CAAEpD,OAAQ,UACxB,kBAACkD,EAAD,WCvDlBrD,EAAYC,YAAW,CACzB2B,KAAM,CACFnB,MAAO,QACPL,UAAW,WA2BJoD,MAvBf,WAEI,IAAMvC,EAAUjB,IAEhB,OACI,yBAAKkB,UAAWD,EAAQW,MACpB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,eACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,UACR,kBAAC,EAAD,CAAYnD,MAAM,gBClBtBoD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.c775f012.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    background: {\n        height: '100%',\n        minHeight: '100vh',\n        padding: '15px 0',\n        background: props => props.color,\n    },\n    container: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: props => props.horizontalAlign,\n        alignItems: props => props.verticalAlign\n    }\n})\n\nexport function Background(props) {\n\n    const { children } = props\n    const classes = useStyles(props)\n\n    return (\n        <div className={classes.background}>\n            <div className={classes.container}>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nBackground.propTypes = {\n    children: PropTypes.node,\n    color: PropTypes.string,\n    horizontalAlign: PropTypes.oneOf(['center', 'start', 'end', 'space-around', 'space-between']),\n    verticalAlign: PropTypes.oneOf(['center', 'start', 'end'])\n}\n\nBackground.defaultProps = {\n    children: '',\n    color: '',\n    horizontalAlign: 'center',\n    verticalAlign: 'center'\n}\n\nexport default Background\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport Container from '@material-ui/core/Container'\nimport { makeStyles } from '@material-ui/core/styles'\n\nexport const QuestionHead = (props) => {\n\n    const { children } = props\n\n    return (\n        <Grid item xs={12}>\n            <Container>\n                {children}\n            </Container>\n        </Grid>\n    )\n}\n\n\nexport const QuestionTitle = (props) => {\n\n    const { children } = props\n\n    return (\n        <Grid item xs={12}>\n            {children}\n        </Grid>\n    )\n}\n\nexport const QuestionBody = (props) => {\n\n    const { children } = props\n\n    return (\n        <Grid item xs={12}>\n            {children}\n        </Grid>\n    )\n}\n\nconst useActionStyles = makeStyles({\n    root: {\n        textAlign: 'center',\n        margin: '10px 0'\n    }\n})\n\nexport const QuestionActions = (props) => {\n\n    const { children } = props\n    const classes = useActionStyles()\n\n    return (\n        <Container className={classes.root} >\n            <Grid item xs={12}>\n                {children}\n            </Grid>\n        </Container>\n    )\n}\n\nfunction QuestionContainer(props) {\n\n    const { children } = props\n\n    return (\n        <Container>\n            <Grid container>\n                {children}\n            </Grid>\n        </Container>\n    )\n}\n\nQuestionContainer.propTypes = {\n    children: PropTypes.node\n}\n\nexport default QuestionContainer\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Lottie from 'lottie-react-web'\n\nfunction Animation(props) {\n\n    const { animationData } = props\n\n    return (\n        <Lottie\n            options={{\n                animationData\n            }}\n        />\n    )\n}\n\nAnimation.propTypes = {\n    animationData: PropTypes.object.isRequired\n}\n\nexport default Animation\n","import React from 'react'\n\nimport Animation from '../components/animation/Animation'\n\nimport animation from './json/hello.json'\n\nexport default function HelloAnimation() {\n    return (\n        <Animation animationData={animation} />\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\nimport { Typography, makeStyles, Container, Button } from '@material-ui/core'\n\nimport QuestionContainer, {\n    QuestionHead,\n    QuestionTitle,\n    QuestionBody,\n    QuestionActions\n} from '../../components/question-container/QuestionContainer'\nimport HelloAnimation from '../../animations/HelloAnimation'\nimport Background from '../../components/background/Background'\n\nconst useStyles = makeStyles({\n    questionHead: {\n        fontWeight: 'bold',\n        textShadow: '2px 2px 0 #4100c1, 4px 4px 0 #000000;',\n        color: '#61dbc1',\n        marginBottom: '10px'\n    },\n    questionText: {\n        color: 'darkblue',\n        textAlign: 'justify'\n    },\n    buttonRoot: {\n        width: '100%',\n    }\n})\n\nconst text = 'Привет. Это игра. Правила просты: я даю задание, выполняешь - переходишь к новому заданию. А зачем это тебе? ' +\n    'Ответ в конце!'\n\nconst WelcomePage = (props) => {\n\n    const { history } = props\n    const classes = useStyles()\n\n    const handleButtonOnClick = () => {\n        return history.push('/question-1/')\n    }\n\n    return (\n        <Background color=\"yellow\">\n            <QuestionContainer>\n\n                <QuestionHead>\n                    <HelloAnimation/>\n                </QuestionHead>\n\n                <QuestionTitle>\n                    <Container>\n                        <Typography variant=\"h2\" className={classes.questionHead}>\n                            На старт!\n                        </Typography>\n                    </Container>\n                </QuestionTitle>\n\n                <QuestionBody>\n                    <Container className={classes.questionText}>\n                        <Typography variant=\"h6\">\n                            {text}\n                        </Typography>\n                    </Container>\n                </QuestionBody>\n\n                <QuestionActions>\n                    <Button\n                        className={classes.buttonRoot}\n                        size=\"large\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleButtonOnClick}\n                    >\n                        Погнали!\n                    </Button>\n                </QuestionActions>\n\n            </QuestionContainer>\n        </Background>\n    )\n}\n\nWelcomePage.propTypes = {\n    //prop from withRouter hoc\n    history: PropTypes.shape({\n        push: PropTypes.func\n    })\n}\n\nexport default withRouter(WelcomePage)\n","import React from 'react'\n\nimport Animation from '../components/animation/Animation'\n\nimport animation from './json/senya.json'\n\nexport default function SenyaAnimation() {\n    return (\n        <Animation animationData={animation} />\n    )\n}\n","import React from 'react'\n\nimport Animation from '../components/animation/Animation'\n\nimport animation from './json/qr.json'\n\nexport default function QrAnimation() {\n    return (\n        <Animation animationData={animation} />\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Typography, makeStyles, Container } from '@material-ui/core'\n\nimport QuestionContainer, {\n    QuestionHead,\n    QuestionTitle,\n    QuestionBody,\n} from '../../components/question-container/QuestionContainer'\nimport Background from '../../components/background/Background'\nimport SenyaAnimation from '../../animations/SenyaAnimation'\nimport QrAnimation from '../../animations/QrAnimation'\n\nconst useStyles = makeStyles({\n    questionHead: {\n        fontWeight: 'bold',\n        textShadow: '2px 2px 0 #603cd2, 4px 4px 0 #000000;',\n        color: '#ffffff',\n        marginBottom: '10px'\n    },\n    questionText: {\n        color: 'white',\n        textAlign: 'justify',\n        textShadow: '1px 1px 0 #000000;',\n        marginBottom: '15px'\n    },\n    buttonRoot: {\n        width: '100%',\n    }\n})\n\nconst text = 'Следующее задание ты найдёшь там, где находится обитель пенного и приют хрустящего в мирное время.'\n\nconst FirstQuestion = () => {\n\n    const classes = useStyles()\n\n    return (\n        <Background color=\"#ff5656\">\n            <QuestionContainer>\n\n                <QuestionHead>\n                    <SenyaAnimation/>\n                </QuestionHead>\n\n                <QuestionTitle>\n                    <Container>\n                        <Typography variant=\"h3\" className={classes.questionHead}>\n                            Похомячим?\n                        </Typography>\n                    </Container>\n                </QuestionTitle>\n\n                <QuestionBody>\n                    <Container className={classes.questionText}>\n                        <Typography variant=\"h6\">\n                            {text}\n                        </Typography>\n                    </Container>\n                </QuestionBody>\n\n                <QuestionBody>\n                    <Container style={{ height: '100px' }}>\n                        <QrAnimation />\n                    </Container>\n                </QuestionBody>\n\n            </QuestionContainer>\n        </Background>\n    )\n}\n\nexport default FirstQuestion\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport Background from './components/background/Background'\nimport WelcomePage from './pages/welcome-page/WelcomePage'\nimport FirstQuestion from './pages/question-1/FirstQuestion'\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100vw',\n        minHeight: '100vh',\n    }\n})\n\nfunction App() {\n\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root} >\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <WelcomePage />\n                    </Route>\n                    <Route path=\"/question-1\">\n                        <FirstQuestion />\n                    </Route>\n                    <Route path=\"/part2\">\n                        <Background color=\"yellow\" />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}